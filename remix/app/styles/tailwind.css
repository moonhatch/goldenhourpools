@import "tailwindcss";

@plugin "tailwindcss-animate";
@plugin "@tailwindcss/typography";

@theme {
  --font-sans: "ABCDiatypeMono", "sans-serif";
  --font-serif: "BasteB", "sans-serif";

  --color-white: #ffffff;
  --color-ghp-50: #eae9e5;
  --color-ghp-100: #cec7bb;
  --color-ghp-300: #918c83;
  --color-ghp-500: #797367;
  --color-black: #2d2d2d;

  --color-blue: #5ba8ea;
  --color-orange: #f35f2a;

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

@layer base {
  /*
  * The default border color has changed to `currentColor` in Tailwind CSS v4,
  * so we've added these compatibility styles to make sure everything still
  * looks the same as it did with Tailwind CSS v3.

  * If we ever want to remove these styles, we need to add an explicit border
  * color utility to any element that depends on these defaults.
  */
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-stone-700, currentColor);
  }

  html {
    @apply scroll-smooth bg-ghp-100 antialiased;
  }

  body {
    @apply flex min-h-dvh flex-col font-light text-black;
  }

  ::selection {
    @apply bg-blue text-white;
  }

  @font-face {
    font-family: "ABCDiatypeMono";
    src: url("./fonts/ABCDiatypeMono-Light.otf") format("opentype");
    font-weight: 300;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: "ABCDiatypeMono";
    src: url("./fonts/ABCDiatypeMono-Regular.otf") format("opentype");
    font-weight: 400;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: "BasteB";
    src: url("./fonts/BasteB-Regular.otf") format("opentype");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }
}

@layer components {
  /**
  * Prose as body copy
  */
  .ghp-prose {
    @apply prose max-w-4xl prose-headings:mt-0 prose-headings:mb-4 prose-headings:font-serif prose-headings:font-normal prose-h1:text-4xl prose-h2:text-3xl lg:prose-h2:text-4xl prose-p:leading-tight prose-a:underline prose-a:outline-none prose-a:focus-visible:underline-offset-4 prose-blockquote:not-italic prose-strong:font-bold prose-code:prose-base prose-code:font-sans prose-code:font-normal md:prose-code:prose-xl prose-ol:leading-tight prose-ul:leading-tight prose-th:pb-6 md:prose-th:pb-8 prose-td:prose-base md:prose-td:prose-xl prose-img:h-[calc(100vw-3rem)] prose-img:rounded-3xl prose-img:object-cover md:prose-img:h-auto;

    --tw-prose-body: theme(--color-black);
    --tw-prose-headings: theme(--color-black);
    --tw-prose-lead: theme(--color-black);
    --tw-prose-links: theme(--color-black);
    --tw-prose-bold: theme(--color-black);
    --tw-prose-counters: theme(--color-black);
    --tw-prose-bullets: theme(--color-black);
    --tw-prose-hr: theme(--color-black);
    --tw-prose-quotes: theme(--color-black);
    --tw-prose-quote-borders: theme(--color-black);
    --tw-prose-captions: theme(--color-black);
    --tw-prose-code: theme(--color-black);
    --tw-prose-pre-code: theme(--color-black);
    --tw-prose-pre-bg: theme(--color-black);
    --tw-prose-th-borders: theme(--color-black);
    --tw-prose-td-borders: theme(--color-black);
    --tw-prose-invert-body: theme(--color-white);
    --tw-prose-invert-headings: theme(--color-white);
    --tw-prose-invert-lead: theme(--color-white);
    --tw-prose-invert-links: theme(--color-white);
    --tw-prose-invert-bold: theme(--color-white);
    --tw-prose-invert-counters: theme(--color-white);
    --tw-prose-invert-bullets: theme(--color-white);
    --tw-prose-invert-hr: theme(--color-white);
    --tw-prose-invert-quotes: theme(--color-white);
    --tw-prose-invert-quote-borders: theme(--color-white);
    --tw-prose-invert-captions: theme(--color-white);
    --tw-prose-invert-code: theme(--color-white);
    --tw-prose-invert-pre-code: theme(--color-white);
    --tw-prose-invert-pre-bg: "rgb(0 0 0 / 50%)";
    --tw-prose-invert-th-borders: theme(--color-white);
    --tw-prose-invert-td-borders: theme(--color-white);
  }

  .ghp-h-screen {
    height: 100vh;
    height: 100svh;
  }

  .ghp-w-screen {
    width: 100vw;
    width: 100svw;
  }

  .ghp-iframe {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100vw;
    width: 100svw;
    height: 100vh;
    height: 100svh;
    transform: translate(-50%, -50%);
  }

  @media (min-aspect-ratio: 16/9) {
    .ghp-iframe {
      /* height = 100 * (9 / 16) = 56.25 */
      height: 56.25vw;
      height: 56.25svw;
    }
  }
  @media (max-aspect-ratio: 16/9) {
    .ghp-iframe {
      /* width = 100 / (9 / 16) = 177.777777 */
      width: 177.78vh;
      width: 177.78svh;
    }
  }

  .embla {
    @apply overflow-hidden;
  }

  .embla__container {
    @apply flex;
  }

  .embla__slide {
    @apply min-w-0 shrink-0 grow-0 basis-[90%] lg:basis-1/3;
  }

  /* fix overlay background to not be white */
  sanity-visual-editing > div > div[data-ui="Card"] {
    background-color: transparent !important;
  }

  /* fix overlay "Open in Studio" background to not be white */
  sanity-visual-editing > div > div div[data-ui="Card"] {
    background-color: #556bfc !important;
  }
}
